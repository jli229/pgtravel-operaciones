# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
    app.hotel.cupos: [ 1A, 2A, 3A, 1A1CH, 2A1CH ]
    app.hotel.plans: [ CP, MAP, EP, AP, AI ]
    app.reservation.notification_lines: [ sms, email, "phone-call" ]

services:
    # KernelRequest listener
    extension.listener:
        class: AppBundle\Listener\DoctrineExtensionListener
        calls:
            - [ setContainer, [ @service_container ] ]
        tags:
            # translatable sets locale after router processing
            - { name: kernel.event_listener, event: kernel.request, method: onLateKernelRequest, priority: -10 }
            # loggable hooks user username if one is in security context
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            # translatable sets locale such as default application locale before command execute
            - { name: kernel.event_listener, event: console.command, method: onConsoleCommand, priority: -10 }


    # Doctrine Extension listeners to handle behaviors
    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
            - [ setDefaultLocale, [ %locale% ] ]
            - [ setTranslationFallback, [ false ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.loggable:
        class: Gedmo\Loggable\LoggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    app.form.type.profile_form_type:
        class: AppBundle\Form\Type\ProfileFormType
        arguments: [ %fos_user.model.user.class% ]
        tags:
            - { name: form.type }
    app.form.type.hotel_plan_type:
        class: AppBundle\Form\Type\HotelPlansType
        arguments: [ %app.hotel.plans% ]
        tags:
            - { name: form.type }
    app.form.type.notification_line_type:
        class: AppBundle\Form\Type\NotificationLineType
        arguments: [ %app.reservation.notification_lines% ]
        tags:
            - { name: form.type }
    app.form.type.offer_form_type:
        class: AppBundle\Form\Type\OfferFormType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }

    app.validator.constraints.cupos:
        class: ValidCupoValidator
        arguments: [ %app.hotel.cupos% ]
        tags:
            - { name: validator.constraint_validator, alias: validator_cupos }
    app.validator.constraints.plans:
        class: ValidPlanValidator
        arguments: [ %app.hotel.plans% ]
        tags:
            - { name: validator.constraint_validator, alias: validator_plans }
