parameters:
    app.hotel.cupos: [ SGL, DBL, TRP, 1A1CH, 2A1CH, 2CH, 1A2CH, 2A2CH ]
    app.hotel.plans: [ CP, MAP, EP, AP, AI ]
    app.reservation.notification_lines: [ sms, email, 'phone-call' ]

    app.administrative_services:
        - { name: Office, price: 5 }
        - { name: Internet and phone, price: 10 }
        - { name: Transportation, price: 10 }
        - { name: Room, price: 30 }
        - { name: Board, price: 30 }
        - { name: Currency exchange, price: 120 }
        - { name: Wire fee, price: 30 }
        - { name: Miscelaneas Expenses, price: 50 }
        - { name: Bonus, price: 20 }
        - { name: Parking, price: 5 }
        - { name: Advertising, price: 2 }
        - { name: Water, price: 1 }

    app.contract.models:
        hotel:
            name: hotel
            display: Hotel
            voucher_title: HOTEL VOUCHER
            html_options: 'end-date nights facility -places -rent-cars'
        transport:
            name: transport
            display: Transportation
            voucher_title: TRANSPORT VOUCHER
            html_options: '-nights -facility places -rent-cars -pax'
        car-rental:
            name: car-rental
            display: Car rental
            voucher_title: AUTO VOUCHER
            html_options: '-pax places rent-cars -nights -facility'
        restaurant:
            name: restaurant
            display: Restaurant
            voucher_title: RESTAURANT VOUCHER
            html_options: '-end-date -places -rent-cars -nights pax facility'
        optionals: { name: optionals, display: Optionals, voucher_title: OPTIONAL VOUCHER }
        guide:
            name: guide
            display: Guide
            has_pax: false
            html_options: '-pax'
        private-house:
            name: private-house
            display: Private house
            voucher_title: HOUSE VOUCHER
            html_options: 'nights pax -end-date -places -rent-cars -nights pax facility'
        other: { name: other, display: Other }

    app.email_positions: [ Home, Work, Mobile, Other ]

services:
    app.form.type.contract_filter_form_type:
        class: AppBundle\Form\Type\ContractFilterFormType
        arguments: [ '%app.contract.models%' ]
        tags:
            - { name: form.type }
    app.form.type.meal_plan_type:
        class: AppBundle\Form\Type\MealPlanType
        arguments: [ '%app.hotel.plans%' ]
        tags:
            - { name: form.type }
    app.form.type.profile_form_type:
        class: AppBundle\Form\Type\ProfileFormType
        arguments: [ '%fos_user.model.user.class%' ]
        tags:
            - { name: form.type }
    app.form.type.hotel_plan_type:
        class: AppBundle\Form\Type\HotelPlansType
        arguments: [ '%app.hotel.plans%' ]
        tags:
            - { name: form.type }
    app.form.type.notification_line_type:
        class: AppBundle\Form\Type\NotificationLineType
        arguments: [ '%app.reservation.notification_lines%' ]
        tags:
            - { name: form.type }
    app.form.type.offer_form_type:
        class: AppBundle\Form\Type\OfferFormType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }
    app.form.type.reservation_form_type:
        class: AppBundle\Form\Type\ReservationFormType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }
    app.form.type.operator_type:
        class: AppBundle\Form\Type\OperatorType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }
    app.form.type.confirm_service_form_type:
        class: AppBundle\Form\Type\ConfirmServiceFormType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }
    app.form.type.offer_service_type:
        class: AppBundle\Form\Type\OfferServiceType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }
    app.form.type.contract_model_type:
        class: AppBundle\Form\Type\ContractModelType
        arguments: [ '%app.contract.models%' ]
        tags:
            - { name: form.type }
    app.form.type.offer_service_model_type:
        class: AppBundle\Form\Type\OfferServiceModelType
        arguments: [ '%app.contract.models%' ]
        tags:
            - { name: form.type }
    app.form.type.province_type:
        class: AppBundle\Form\Type\ProvinceType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }
    app.form.type.place_type:
        class: AppBundle\Form\Type\PlaceType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }
    app.form.type.rent_car_type:
        class: AppBundle\Form\Type\RentCarType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }
    app.form.type.contract_supplier_type:
        class: AppBundle\Form\Type\ContractSupplierType
        arguments: [ '@doctrine.orm.entity_manager' ]
        tags:
            - { name: form.type }
    app.form.type.email_position_type:
        class: AppBundle\Form\Type\EmailPositionType
        arguments: [ '%app.email_positions%' ]
        tags:
            - { name: form.type }

    app.validator.constraints.email_position:
        class: ValidEmailPositionValidator
        arguments: [ %app.email_positions% ]
        tags:
            - { name: validator.constraint_validator, alias: validator_email_position }
    app.validator.constraints.cupos:
        class: ValidCupoValidator
        arguments: [ %app.hotel.cupos% ]
        tags:
            - { name: validator.constraint_validator, alias: validator_cupos }
    app.validator.constraints.plans:
        class: ValidPlanValidator
        arguments: [ %app.hotel.plans% ]
        tags:
            - { name: validator.constraint_validator, alias: validator_plans }
    app.lib.reports.report_factory:
        class: AppBundle\Lib\Reports\ReportFactory
        arguments: [ "@service_container" ]
    report.factory: '@app.lib.reports.report_factory'

    app.listener.response_cache_listener:
        class: AppBundle\Listener\AddResponseCacheListener
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    app.twig_extension:
        class: AppBundle\Twig\AppExtension
        arguments: [ '@doctrine.orm.entity_manager' ]
        public: false
        tags:
            - { name: twig.extension }
